version: '3'
services:
  frontend:
    build: ./frontend/supermercado-frontend-react  # Dockerfile del frontend
    ports:
      - "3000:80"
    depends_on:
      - inventario
      - auth
    container_name: frontend

  inventario:
    build: ./backend/supermercado-inventario  # Dockerfile del microservicio de inventario
    ports:
      - "5000:5000"
    environment:
      - MONGO_URI=mongodb://mongo:27017/supermarket
    depends_on:
      - mongo
    container_name: inventario

  auth:
    build: ./backend/supermercado-auth  # Dockerfile del microservicio de autenticación
    ports:
      - "4000:4000"  # Cambia a tu puerto preferido
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=root
      - MYSQL_PASSWORD=rootpassword  # Cambia esto a una contraseña segura
      - MYSQL_DATABASE=auth_db
    depends_on:
      - mysql
    container_name: auth

  mysql:
    image: mysql:5.7  # Puedes usar la versión que necesites
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword  # Cambia esto a una contraseña segura
      - MYSQL_DATABASE=auth_db
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql  # Esto asegura que los datos se persistan
    container_name: mysql

  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    container_name: mongodb

volumes:
  mongo-data:
  mysql-data:  # Aquí se declara el volumen para MySQL
